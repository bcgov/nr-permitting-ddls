create table fta_replication.tenure_application 
   (	tenure_app_id bigint not null, 
	tenure_appname varchar(250) not null, 
	submission_id bigint not null, 
	forest_file_id varchar(10), 
	client_number varchar(8) not null, 
	client_locn_code varchar(2) not null, 
	tenure_application_type_code varchar(3) not null, 
	cascade_split_code varchar(1), 
	tenure_application_state_code varchar(3) not null, 
	tenure_app_purp_code varchar(3) not null, 
	adjudication_ind varchar(1) default 'n' not null, 
	adjudicated_by varchar(30), 
	adjudication_date timestamp(0), 
	adjudication_requested_ind varchar(1) default 'n' not null, 
	current_assigned_to varchar(4) not null, 
	image_created_ind varchar(1) default 'n' not null, 
	map_report_created_ind varchar(1) default 'n' not null, 
	description varchar(255), 
	min_x bigint not null, 
	min_y bigint not null, 
	max_x bigint not null, 
	max_y bigint not null, 
	management_unit_number varchar(10), 
	management_unit_block varchar(4), 
	management_unit_sub_block varchar(3), 
	completion_date timestamp(0), 
	finalized_by varchar(30), 
	submission_date timestamp(0) not null, 
	image_error smallint default 0 not null, 
	map_report_error smallint default 0 not null, 
	spatial_data_error smallint default 0 not null, 
	spatial_ind varchar(1) default 'n' not null, 
	file_created_ind varchar(1) default 'n' not null, 
	image_height smallint, 
	image_width smallint, 
	meters_per_pixel decimal(10,3), 
	image_scale bigint, 
	adjudication_comment varchar(2000), 
	cutting_permit_id varchar(3), 
	image_map_size_code varchar(1), 
	org_unit_no bigint not null, 
	geo_org_unit_no bigint, 
	image_mime_type_code varchar(3), 
	image_orientation_code varchar(1), 
	image_create_in_progress_ind varchar(1) default 'n' not null, 
	image_create_requested_by varchar(30), 
	image_create_requested_date timestamp(0), 
	overlay_geo_district_code varchar(6), 
	bcgs_mapsheet_no varchar(32), 
	tsa_number varchar(2), 
	land_district varchar(50), 
	pulpwood_agreement varchar(20), 
	utm_zone int, 
	revision_count int not null, 
	entry_userid varchar(30) not null, 
	entry_timestamp timestamp(0) not null, 
	update_userid varchar(30) not null, 
	update_timestamp timestamp(0) not null, 
	tenure_app_guid bytea not null, 
	application_decision_message varchar(1000), 
	clearance_status_request_uri varchar(2000), 
	dependent_submission_reference varchar(100), 
	tenure_amendment_id bigint, 
	business_amendment_id bigint, 
	decision_date timestamp(0), 
	issuance_date timestamp(0)
   ) 
 ;

comment on column fta_replication.tenure_application.tenure_app_guid is 'global unique identifier. created as part of the fta 5 changes.';
comment on column fta_replication.tenure_application.application_decision_message is 'a free format text explaining the application processing results in detail.';
comment on column fta_replication.tenure_application.clearance_status_request_uri is 'a universal reference identifier to the record''s status request entry in the status and clearance system.';
comment on column fta_replication.tenure_application.dependent_submission_reference is 'a submission can have dependency on other submissions (those that already submitted or will be submitted in feature). the value would help the technical staff who working on resolving the overlap issues to get more info about the application being handled. there is another entity which provide the dependencies at detail level (feature) for the same purpose which is a child entity of the road application map feature.';
comment on column fta_replication.tenure_application.tenure_amendment_id is 'contains the number of approved amendments done on a specific tenure. although the number can be calculated, it needs to be saved and persistent because there can be scenario in which two applications can be submitted against one tenure. if the one that was submitted later gets approved first the assigned amendment id won''t be correct. it needs to wait until the status of the second application becomes known. if first application also approved the next amendment id should be assigned to the it and the one that was approved before it going to have an amendment id equal to the first one plus one. the amendment id is and update-able column and will be updated if needed.';
comment on column fta_replication.tenure_application.business_amendment_id is 'an integer representing the amendment id a licensee referencing with regards to a section.  fta 5 increments tenure amendment id by one when received a new application for an fta 5 tenure. there are cases that application get rejected or failed and re-submitted application again results in incrementing the tenure amendment id by 1. so, the amendment id referenced by the licensees and fta 5 staff get out of synch. this data item would help the licensees to reference their specific amendment id that they will use when communicating with the fta 5 staff.';
